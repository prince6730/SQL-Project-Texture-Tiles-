SELECT * FROM product_details;

SELECT * FROM product_hierarchy;

SELECT * FROM product_prices;

SELECT * FROM sales;

-- 1. What was the total quantity sold for all products?

SELECT pd.product_name, SUM(s.qty) AS sales_count
FROM product_details AS pd
INNER JOIN sales AS s
ON pd.product_id = s.prod_id
GROUP BY pd.product_name
ORDER BY s.qty DESC;

-- 2. What is total generated revenue for all products before discounts?

SELECT SUM(price*qty) AS no_discount_revenue
FROM sales;

-- 3. What was the total discount amount for all products?

SELECT SUM(price*qty*discount)/100 AS total_discount FROM sales;

-- 4. How many unique transactions were there ?

SELECT COUNT(DISTINCT txn_id) AS unique_transactions FROM sales; 

-- 5. What are the average unique products purchased in each transactions?

WITH cte_transaction_products AS (
    SELECT txn_id,
    COUNT(prod_id) AS product_count
    FROM sales
    GROUP BY txn_id)
SELECT ROUND(AVG(product_count)) AS average_unique_products
FROM cte_transaction_products;

-- 6. What is the average discount per transactions?

WITH cte_transaction_discount AS (
   SELECT txn_id,
   SUM(price*qty*discount)/100 AS total_discount
   FROM sales
   GROUP BY txn_id)
SELECT ROUND(AVG(total_discount)) AS average_discount
FROM cte_transaction_discount;

-- 7. What is average revenue for member transactions and non-member transactions?

WITH cte_average_revenue AS (
    SELECT member, txn_id, SUM(price*qty) AS revenue
    FROM sales
    GROUP BY member, txn_id)
SELECT member, AVG(revenue) AS average_revenue
FROM cte_average_revenue
GROUP BY member;

-- 8. What are the top 3 products by total revenue before discount?

SELECT pd.product_name, SUM(s.price*s.qty) AS total_revenue_before_discount
FROM product_details AS pd
INNER JOIN sales AS s
ON pd.product_id = s.prod_id
GROUP BY pd.product_name
ORDER BY total_revenue_before_discount DESC LIMIT 3;

-- 9. What are the total quantity, revenue and discount for each segment?

SELECT pd.segment_name,
SUM(s.qty) AS total_quantity,
SUM(s.price*s.qty) AS total_revenue,
SUM(s.price*s.qty*s.discount)/100 AS total_discount
FROM product_details AS pd
INNER JOIN sales AS s
ON pd.product_id = s.prod_id
GROUP BY pd.segment_name;

-- 10. What is top selling product for each segment?

SELECT pd.segment_id, pd.segment_name, pd.product_name, pd.product_id, SUM(s.price*s.qty) AS top_selling_product
FROM product_details AS pd
INNER JOIN sales AS s
ON pd.product_id = s.prod_id
GROUP BY pd.segment_id, pd.segment_name, pd.product_name, pd.product_id
ORDER BY top_selling_product
DESC LIMIT 5;

-- 11. What are the total quantity, revenue and discount for each category?

SELECT pd.category_name,
SUM(s.qty) AS total_quantity,
SUM(s.price*s.qty) AS total_revenue,
SUM(s.price*s.qty*s.discount) AS total_discount
FROM product_details AS pd
INNER JOIN sales AS s
ON pd.product_id = s.prod_id
GROUP BY pd.category_name;

-- 12. What is top selling product for each category?

SELECT pd.category_id, pd.category_name, pd.product_name, pd.product_id, SUM(s.price*s.qty) AS top_selling_product
FROM product_details AS pd
INNER JOIN sales AS s
ON pd.product_id = s.prod_id
GROUP BY pd.category_id, pd.category_name, pd.product_name, pd.product_id
ORDER BY top_selling_product
DESC LIMIT 5;


SELECT * FROM product_details;

SELECT * FROM product_hierarchy;

SELECT * FROM product_prices;

SELECT * FROM sales;
